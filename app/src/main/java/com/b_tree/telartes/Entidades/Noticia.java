package com.b_tree.telartes.Entidades;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT. Enable "keep" sections if you want to edit. 

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.util.Log;

import com.b_tree.telartes.Utils.Utils;
import com.b_tree.telartes.rest.ImageDownloader;

import org.json.JSONObject;

import java.io.IOException;
import java.io.Serializable;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URL;

/**
 * Entity mapped to table "NOTICIA".
 */
public class Noticia  implements Serializable{

    private Long id;
    private int nid;
    /** Not-null value. */
    private String titulo;
    private String descripcion;
    private String categoria;
    private String fuente;
    private String imagen;
    private String fecha;
    private String enviado_por;
    private String autorEnlace;
    private String autorNombre;

    public Noticia() {
    }

    public Noticia(Long id) {
        this.id = id;
    }

    public Noticia(Long id, int nid, String titulo, String descripcion, String categoria, String fuente, String imagen, String fecha, String enviado_por, String autorEnlace, String autorNombre) {
        this.id = id;
        this.nid = nid;
        this.titulo = titulo;
        this.descripcion = descripcion;
        this.categoria = categoria;
        this.fuente = fuente;
        this.imagen = imagen;
        this.fecha = fecha;
        this.enviado_por = enviado_por;
        this.autorEnlace = autorEnlace;
        this.autorNombre = autorNombre;
    }


    public Noticia(JSONObject jsonObject){

        try {

            this.titulo = android.text.Html.fromHtml(jsonObject.getString("node_title")).toString();
            this.descripcion = jsonObject.getString("descripcion");
            this.categoria = jsonObject.getString("categor√≠a");
            this.fuente = android.text.Html.fromHtml(jsonObject.getString("fuente del item de noticia")).toString();
            this.imagen = (jsonObject.getString("imagen"));
            int start = imagen.indexOf("src=\"") + 5;
            int end = imagen.indexOf("\"", start);
            String src = imagen.substring(start, end);
            String myBase64Image = Utils.encodeToBase64(new ImageDownloader().execute(src).get(), Bitmap.CompressFormat.JPEG, 100);
            this.imagen=myBase64Image;
            this.fecha = jsonObject.getString("fecha de mensaje");
            this.nid = Integer.parseInt(jsonObject.getString("nid"));
            this.enviado_por=jsonObject.getString("enviado por");
            URI uri = new URI(jsonObject.getString("enlace del autor"));
            String domain = uri.getHost();
            this.autorEnlace= "http://"+domain;
            this.autorNombre = jsonObject.getString("nombre del autor");
        }catch (Exception e){
            Log.d("Error json", e.getMessage());
        }

    }
    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public int getNid() {
        return nid;
    }

    public void setNid(int nid) {
        this.nid = nid;
    }

    /** Not-null value. */
    public String getTitulo() {
        return titulo;
    }

    /** Not-null value; ensure this value is available before it is saved to the database. */
    public void setTitulo(String titulo) {
        this.titulo = titulo;
    }

    public String getDescripcion() {
        return descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    public String getCategoria() {
        return categoria;
    }

    public void setCategoria(String categoria) {
        this.categoria = categoria;
    }

    public String getFuente() {
        return fuente;
    }

    public void setFuente(String fuente) {
        this.fuente = fuente;
    }

    public String getImagen() {
        return imagen;
    }

    public void setImagen(String imagen) {
        this.imagen = imagen;
    }

    public String getFecha() {
        return fecha;
    }

    public void setFecha(String fecha) {
        this.fecha = fecha;
    }

    public String getEnviado_por() {
        return enviado_por;
    }

    public void setEnviado_por(String enviado_por) {
        this.enviado_por = enviado_por;
    }

    public String getAutorEnlace() {
        return autorEnlace;
    }

    public void setAutorEnlace(String autorEnlace) {
        this.autorEnlace = autorEnlace;
    }

    public String getAutorNombre() {
        return autorNombre;
    }

    public void setAutorNombre(String autorNombre) {
        this.autorNombre = autorNombre;
    }


    public Bitmap urlImageToBitmap(String urlImage) throws MalformedURLException {
        Bitmap mIcon1 = null;
        URL url_value = new URL(urlImage);
        if (url_value != null) {
            try {
                mIcon1 = BitmapFactory.decodeStream(url_value.openConnection().getInputStream());
            } catch (IOException e) {
                e.printStackTrace();
            }
        }
        return mIcon1;
    }

}
